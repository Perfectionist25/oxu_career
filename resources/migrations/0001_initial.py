# Generated by Django 5.2.7 on 2025-10-28 12:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CareerPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Career Path Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('industry', models.CharField(max_length=100, verbose_name='Industry')),
                ('required_skills', models.TextField(help_text='List skills separated by commas', verbose_name='Required Skills')),
                ('average_salary', models.CharField(blank=True, max_length=100, verbose_name='Average Salary')),
                ('growth_outlook', models.CharField(blank=True, max_length=100, verbose_name='Growth Outlook')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Career Path',
                'verbose_name_plural': 'Career Paths',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon')),
                ('color', models.CharField(default='#007cba', max_length=7, verbose_name='Color')),
                ('order', models.IntegerField(default=0, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Resource Category',
                'verbose_name_plural': 'Resource Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LearningTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Track Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all', 'All Levels')], max_length=15, verbose_name='Level')),
                ('estimated_duration', models.CharField(max_length=50, verbose_name='Estimated Duration')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('career_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_tracks', to='resources.careerpath', verbose_name='Career Path')),
            ],
            options={
                'verbose_name': 'Learning Track',
                'verbose_name_plural': 'Learning Tracks',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.TextField(max_length=300, verbose_name='Short Description')),
                ('resource_type', models.CharField(choices=[('article', 'Article'), ('tutorial', 'Tutorial'), ('video', 'Video'), ('ebook', 'E-book'), ('course', 'Online Course'), ('tool', 'Tool/Software'), ('template', 'Template'), ('cheatsheet', 'Cheat Sheet'), ('guide', 'Guide'), ('other', 'Other')], max_length=20, verbose_name='Resource Type')),
                ('content', models.TextField(blank=True, verbose_name='Content')),
                ('external_url', models.URLField(blank=True, verbose_name='External URL')),
                ('file', models.FileField(blank=True, null=True, upload_to='resources/files/', verbose_name='File')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='resources/thumbnails/', verbose_name='Thumbnail')),
                ('author', models.CharField(blank=True, max_length=100, verbose_name='Author')),
                ('publisher', models.CharField(blank=True, max_length=100, verbose_name='Publisher')),
                ('language', models.CharField(choices=[('en', 'English'), ('uz', 'Uzbek'), ('ru', 'Russian'), ('multi', 'Multiple Languages')], default='en', max_length=10, verbose_name='Language')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all', 'All Levels')], default='all', max_length=15, verbose_name='Level')),
                ('duration', models.CharField(blank=True, help_text='e.g., 2 hours, 30 minutes', max_length=50, verbose_name='Duration')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='Tags')),
                ('keywords', models.CharField(blank=True, max_length=500, verbose_name='Keywords')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('is_free', models.BooleanField(default=True, verbose_name='Free Resource')),
                ('requires_login', models.BooleanField(default=False, verbose_name='Requires Login')),
                ('views_count', models.IntegerField(default=0, verbose_name='Views Count')),
                ('downloads_count', models.IntegerField(default=0, verbose_name='Downloads Count')),
                ('likes_count', models.IntegerField(default=0, verbose_name='Likes Count')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resources.resourcecategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='careerpath',
            name='resources',
            field=models.ManyToManyField(blank=True, to='resources.resource', verbose_name='Recommended Resources'),
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Downloaded At')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='resources.resource', verbose_name='Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Resource Download',
                'verbose_name_plural': 'Resource Downloads',
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Plan Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public Plan')),
                ('color', models.CharField(default='#007cba', max_length=7, verbose_name='Color')),
                ('estimated_duration', models.CharField(blank=True, max_length=50, verbose_name='Estimated Duration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_plans', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Study Plan',
                'verbose_name_plural': 'Study Plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlanItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.resource', verbose_name='Resource')),
                ('study_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.studyplan', verbose_name='Study Plan')),
            ],
            options={
                'verbose_name': 'Study Plan Item',
                'verbose_name_plural': 'Study Plan Items',
                'ordering': ['order'],
                'unique_together': {('study_plan', 'resource')},
            },
        ),
        migrations.AddField(
            model_name='studyplan',
            name='resources',
            field=models.ManyToManyField(through='resources.StudyPlanItem', to='resources.resource', verbose_name='Resources'),
        ),
        migrations.CreateModel(
            name='TrackResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('is_required', models.BooleanField(default=True, verbose_name='Required')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.resource', verbose_name='Resource')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.learningtrack', verbose_name='Track')),
            ],
            options={
                'verbose_name': 'Track Resource',
                'verbose_name_plural': 'Track Resources',
                'ordering': ['order'],
                'unique_together': {('track', 'resource')},
            },
        ),
        migrations.AddField(
            model_name='learningtrack',
            name='resources',
            field=models.ManyToManyField(through='resources.TrackResource', to='resources.resource', verbose_name='Resources'),
        ),
        migrations.CreateModel(
            name='ResourceLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Liked At')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='resources.resource', verbose_name='Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Resource Like',
                'verbose_name_plural': 'Resource Likes',
                'ordering': ['-created_at'],
                'unique_together': {('resource', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ResourceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], verbose_name='Rating')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('pros', models.TextField(blank=True, verbose_name='Pros')),
                ('cons', models.TextField(blank=True, verbose_name='Cons')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Approved')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified Review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='resources.resource', verbose_name='Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Resource Review',
                'verbose_name_plural': 'Resource Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('resource', 'user')},
            },
        ),
    ]
