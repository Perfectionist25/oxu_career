# Generated by Django 5.2.7 on 2025-11-01 10:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cvbuilder', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Company Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('website', models.URLField(verbose_name='Website')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('industry', models.CharField(choices=[('it', 'IT & Technology'), ('finance', 'Finance & Banking'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('consulting', 'Consulting'), ('tourism', 'Tourism & Hospitality'), ('construction', 'Construction'), ('energy', 'Energy'), ('telecom', 'Telecommunications'), ('other', 'Other')], max_length=50, verbose_name='Industry')),
                ('company_size', models.CharField(choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501-1000', '501-1000 employees'), ('1000+', 'More than 1000 employees')], max_length=20, verbose_name='Company Size')),
                ('founded_year', models.IntegerField(blank=True, null=True, verbose_name='Founded Year')),
                ('headquarters', models.CharField(help_text='e.g., Tashkent, Uzbekistan', max_length=100, verbose_name='Headquarters')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Contact Phone')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, verbose_name='Facebook')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified Company')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmployerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100, verbose_name='Position')),
                ('department', models.CharField(max_length=100, verbose_name='Department')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('can_post_jobs', models.BooleanField(default=False, verbose_name='Can Post Jobs')),
                ('can_manage_jobs', models.BooleanField(default=False, verbose_name='Can Manage Jobs')),
                ('can_view_candidates', models.BooleanField(default=False, verbose_name='Can View Candidates')),
                ('can_contact_candidates', models.BooleanField(default=False, verbose_name='Can Contact Candidates')),
                ('is_primary_contact', models.BooleanField(default=False, verbose_name='Primary Contact')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Profile')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employers', to='employers.company', verbose_name='Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Employer Profile',
                'verbose_name_plural': 'Employer Profiles',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Job Title')),
                ('description', models.TextField(verbose_name='Job Description')),
                ('requirements', models.TextField(verbose_name='Requirements')),
                ('responsibilities', models.TextField(verbose_name='Responsibilities')),
                ('benefits', models.TextField(blank=True, verbose_name='Benefits')),
                ('employment_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('remote', 'Remote Work'), ('freelance', 'Freelance')], max_length=20, verbose_name='Employment Type')),
                ('experience_level', models.CharField(choices=[('intern', 'Intern'), ('junior', 'Junior'), ('middle', 'Middle'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager'), ('director', 'Director')], max_length=20, verbose_name='Experience Level')),
                ('location', models.CharField(help_text='e.g., Tashkent, Samarkand, Remote', max_length=100, verbose_name='Location')),
                ('remote_work', models.BooleanField(default=False, verbose_name='Remote Work Available')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Minimum Salary')),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Maximum Salary')),
                ('currency', models.CharField(choices=[('UZS', 'Uzbek Sum (UZS)'), ('USD', 'US Dollar (USD)'), ('EUR', 'Euro (EUR)')], default='UZS', max_length=3, verbose_name='Currency')),
                ('hide_salary', models.BooleanField(default=False, verbose_name='Hide Salary')),
                ('application_url', models.URLField(blank=True, verbose_name='Application URL')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Contact Email')),
                ('skills_required', models.TextField(help_text='List skills separated by commas', verbose_name='Required Skills')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Job')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Job')),
                ('views_count', models.IntegerField(default=0, verbose_name='View Count')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='employers.company', verbose_name='Company')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employers.employerprofile', verbose_name='Posted By')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CandidateNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Note')),
                ('is_private', models.BooleanField(default=True, verbose_name='Private Note')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer_notes', to=settings.AUTH_USER_MODEL, verbose_name='Candidate')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employers.employerprofile', verbose_name='Employer')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employers.job', verbose_name='Job')),
            ],
            options={
                'verbose_name': 'Candidate Note',
                'verbose_name_plural': 'Candidate Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(verbose_name='Cover Letter')),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Expected Salary')),
                ('status', models.CharField(choices=[('new', 'New'), ('reviewed', 'Reviewed'), ('interview', 'Interview'), ('rejected', 'Rejected'), ('hired', 'Hired')], default='new', max_length=20, verbose_name='Status')),
                ('status_changed_at', models.DateTimeField(auto_now=True, verbose_name='Status Changed')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer_applications', to=settings.AUTH_USER_MODEL, verbose_name='Candidate')),
                ('cv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employer_applications', to='cvbuilder.cv', verbose_name='Resume')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer_applications', to='employers.job', verbose_name='Job')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-created_at'],
                'unique_together': {('job', 'candidate')},
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField(verbose_name='Scheduled Date')),
                ('duration', models.IntegerField(help_text='Duration in minutes', verbose_name='Duration')),
                ('location', models.TextField(verbose_name='Location')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20, verbose_name='Status')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('rating', models.IntegerField(blank=True, help_text='Rating from 1 to 5', null=True, verbose_name='Rating')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employers.employerprofile', verbose_name='Interviewer')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='employers.jobapplication', verbose_name='Application')),
            ],
            options={
                'verbose_name': 'Interview',
                'verbose_name_plural': 'Interviews',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], verbose_name='Rating')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('review', models.TextField(verbose_name='Review')),
                ('pros', models.TextField(verbose_name='Pros')),
                ('cons', models.TextField(verbose_name='Cons')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Anonymous Review')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified Review')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employer_reviews', to='employers.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Company Review',
                'verbose_name_plural': 'Company Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('company', 'author')},
            },
        ),
    ]
